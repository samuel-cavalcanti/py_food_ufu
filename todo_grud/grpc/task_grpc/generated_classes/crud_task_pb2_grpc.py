# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import crud_task_pb2 as crud__task__pb2


class CrudTaskServiceStub(object):
    """The insert client service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.insert = channel.unary_unary(
                '/task.CrudTaskService/insert',
                request_serializer=crud__task__pb2.GrpcTask.SerializeToString,
                response_deserializer=crud__task__pb2.GrpcTask.FromString,
                )
        self.update = channel.unary_unary(
                '/task.CrudTaskService/update',
                request_serializer=crud__task__pb2.GrpcTask.SerializeToString,
                response_deserializer=crud__task__pb2.GrpcTask.FromString,
                )
        self.search_by_cid = channel.unary_unary(
                '/task.CrudTaskService/search_by_cid',
                request_serializer=crud__task__pb2.GrpcTask.SerializeToString,
                response_deserializer=crud__task__pb2.GrpcTaskList.FromString,
                )
        self.delete_by_cid = channel.unary_unary(
                '/task.CrudTaskService/delete_by_cid',
                request_serializer=crud__task__pb2.GrpcTask.SerializeToString,
                response_deserializer=crud__task__pb2.GrpcTaskList.FromString,
                )


class CrudTaskServiceServicer(object):
    """The insert client service definition.
    """

    def insert(self, request, context):
        """insert new client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """update  client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def search_by_cid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_by_cid(self, request, context):
        """delete Client by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CrudTaskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'insert': grpc.unary_unary_rpc_method_handler(
                    servicer.insert,
                    request_deserializer=crud__task__pb2.GrpcTask.FromString,
                    response_serializer=crud__task__pb2.GrpcTask.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=crud__task__pb2.GrpcTask.FromString,
                    response_serializer=crud__task__pb2.GrpcTask.SerializeToString,
            ),
            'search_by_cid': grpc.unary_unary_rpc_method_handler(
                    servicer.search_by_cid,
                    request_deserializer=crud__task__pb2.GrpcTask.FromString,
                    response_serializer=crud__task__pb2.GrpcTaskList.SerializeToString,
            ),
            'delete_by_cid': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_by_cid,
                    request_deserializer=crud__task__pb2.GrpcTask.FromString,
                    response_serializer=crud__task__pb2.GrpcTaskList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'task.CrudTaskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CrudTaskService(object):
    """The insert client service definition.
    """

    @staticmethod
    def insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/task.CrudTaskService/insert',
            crud__task__pb2.GrpcTask.SerializeToString,
            crud__task__pb2.GrpcTask.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/task.CrudTaskService/update',
            crud__task__pb2.GrpcTask.SerializeToString,
            crud__task__pb2.GrpcTask.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def search_by_cid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/task.CrudTaskService/search_by_cid',
            crud__task__pb2.GrpcTask.SerializeToString,
            crud__task__pb2.GrpcTaskList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_by_cid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/task.CrudTaskService/delete_by_cid',
            crud__task__pb2.GrpcTask.SerializeToString,
            crud__task__pb2.GrpcTaskList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
